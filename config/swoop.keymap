/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ESC>, <&kp TAB>;
        };

        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <180>;
            tapping-term-ms = <200>;
            global-quick-tap;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            global-quick-tap;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LBKT>;
            key-positions = <3 2>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <6 7>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 22>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 5>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <14 15>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
&kp Q  &kp W  &kp E             &kp R      &kp T    &kp Y           &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D             &kp F      &kp G    &kp H           &kp J  &kp K      &kp L    &kp ENTER
&kp Z  &kp X  &kp C             &kp V      &kp B    &kp N           &kp M  &kp COMMA  &kp DOT  &kp BSPC
              &kp LEFT_CONTROL  &kp SPACE  &mo 2    &kp LEFT_SHIFT  &mo 1  &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        number {
            label = "NUMBER";
            bindings = <
&kp N1           &kp N2       &kp N3        &kp N4     &kp N5           &kp N6                &kp N7                 &kp N8          &kp N9            &kp N0
&kp PLUS         &kp MINUS    &kp ASTERISK  &kp FSLH   &kp EQUAL        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp DOUBLE_QUOTES
&kp EXCLAMATION  &kp AT_SIGN  &kp CARET     &kp LC(V)  &kp LC(LA(A))    &kp LEFT_BRACKET      &kp RBKT               &kp LESS_THAN   &kp GREATER_THAN  &kp RC(PIPE)
                              &trans        &trans     &trans           &mo 3                 &kp RIGHT_SHIFT        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        symbol {
            label = "SYMBOL";
            bindings = <
&kp ESC  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9        &kp KP_NUMBER_0    &kp LG(R)  &kp LG(L)       &kp UP    &trans      &kp BACKSPACE
&kp TAB  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &mt LEFT_ALT NUMBER_6  &kp DOT            &trans     &kp LEFT_ARROW  &kp DOWN  &kp RIGHT   &kp APOSTROPHE
&kp DEL  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3        &kp AT_SIGN        &trans     &kp C_PREV      &kp C_PP  &kp C_NEXT  &trans
                          &trans           &trans                 &trans             &trans     &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        ble {
            label = "BLE";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp KP_N7  &kp KP_N8  &kp KP_N9  &none  &kp BSPC
&bootloader   &none         &none         &bt BT_CLR    &out OUT_TOG    &kp KP_N4  &kp KP_N5  &kp KP_N6  &none  &kp SEMI
&none         &none         &none         &out OUT_USB  &out OUT_BLE    &kp KP_N1  &kp KP_N2  &kp KP_N3  &none  &none
                            &trans        &none         &none           &kp KP_N0  &kp KP_N0  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
